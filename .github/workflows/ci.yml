name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.24]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.64

    - name: Run unit tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Run E2E tests
      run: go test -race -coverprofile=e2e-coverage.out -covermode=atomic ./tests/e2e/...

    - name: Merge coverage profiles
      run: |
        echo "mode: atomic" > merged-coverage.out
        tail -n +2 coverage.out >> merged-coverage.out
        tail -n +2 e2e-coverage.out >> merged-coverage.out

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./merged-coverage.out
        flags: unittests,e2e
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Build
      run: go build -v ./...

    - name: Build examples
      run: |
        cd examples/messenger && go build -v .
        cd ../retry_messenger && go build -v .
